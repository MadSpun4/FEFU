Задание 1.3
Алгоритмы сортировки
Постановка задачи:
Входные данные:
1) текстовый файл, каждая из строк которого содержит 2 ключа  в табличном виде (первый столбец - 1 ключ - см. задание 1.2, второй столбец - 2 ключ - см. свой вариант задания) (типы полей ключей должны соответствовать типу данных в предметной области - все что является числом, должно храниться в виде числа, а не строки, например, время - это не строка, а структура из двух полей целочисленного типа). Все данные во входном файле корректные (проверять на корректность не нужно). Количество строк входного файла - 1000000.
2) целое число n - количество строк входного файла для обработки (10 ≤ n ≤ 1000000).
Выходные данные: 2 текстовых файла, строки которых содержат отсортированные данные входного файла (первый файл - первым алгоритмом сортировки, второй файл - вторым алгоритмом сортировки), последняя строка - время, затраченное на сортировку.
1. Отсортировать данные входного файла в соответствии с заданным порядком сортировки ключей (см. свой вариант задания). Данные в выходном файле должны быть представлены в табличном виде, первый и второй столбец должны содержать значения ключей в соответствии с заданным порядком сортировки, третий столбец - номер строки входного файла.
2. Проверить на устойчивость (привести примеры, доказывающие, что сортировка неустойчивая).
3. Сравнить алгоритмы сортировки по времени (без учета чтения из файла и записи в файл).
4. Определить, на каких значениях ключей достигается наихудшее и наилучшее значение времени сортировки.
Содержание отчета:
1. Титульный лист
2. Неформальная постановка задачи
3. Описание алгоритмов сортировки (не идея, а ваша реализация алгоритма)
4. Текст программы
5. Тесты
5. Примеры, на которых достигается худший и лучший случаи; проверка устойчивости с обоснованием результатов
6. Выводы (что показало сравнение алгоритмов)
Ограничения реализации:
1. Каждая сортировка оформляется в виде отдельной подпрограммы, внутри которой вызывается алгоритм сортировки.
2. На вход алгоритму сортировки подается массив и размерность массива

первый ключ - код направление, второй - фио
оба ключа сортировать по убыванию
первая сортировка: простые вставки
вторая сортировка: быстрая рекурсивная реализация, разбиение ломуто, опорный - последний